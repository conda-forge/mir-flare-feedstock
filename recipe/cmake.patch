From 8e992812db2fa843d57ef2eddef544960b514723 Mon Sep 17 00:00:00 2001
From: YuuuXie <xieyu.fish@gmail.com>
Date: Tue, 1 Nov 2022 12:20:21 -0400
Subject: [PATCH] change cmake

---
 CMakeLists.txt | 172 +++++++++++++++++++++++++++++++------------------
 1 file changed, 109 insertions(+), 63 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 6410c956..698f2d29 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -9,16 +9,20 @@ list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/CMakeModules/)
 
 include(ExternalProject)
 
+option(BUILD_TESTING "" OFF)
+include(CTest)
+
 set(CMAKE_CXX_STANDARD 11)
 set(CMAKE_CXX_STANDARD_REQUIRED ON)
 set(CMAKE_CXX_EXTENSIONS OFF)
+set(CMAKE_INSTALL_LIBDIR "")
 
 set(FLARE_PYTHON_VERSION "" CACHE STRING "Python version to use for compiling modules")
 
 if(NOT CMAKE_BUILD_TYPE)
-  message(STATUS "[flare] CMAKE_BUILD_TYPE not specified, setting it to "
-                 "Release. Use `-DCMAKE_BUILD_TYPE=...` to overwrite.")
-  set(CMAKE_BUILD_TYPE Release)
+    message(STATUS "[flare] CMAKE_BUILD_TYPE not specified, setting it to "
+                   "Release. Use `-DCMAKE_BUILD_TYPE=...` to overwrite.")
+    set(CMAKE_BUILD_TYPE Release)
 endif()
 
 #
@@ -27,29 +31,43 @@ endif()
 
 include(FetchContent)
 
-# googletest
-################################################################################
+# Add conda include directories
+if (DEFINED ENV{PREFIX})
+    message(STATUS "Adding conda include directories.")
+    include_directories($ENV{PREFIX}/include)
+    include_directories($ENV{PREFIX}/include/eigen3)
+    link_directories($ENV{PREFIX}/lib)
+endif()
 
-FetchContent_Declare(googletest
-    GIT_REPOSITORY https://github.com/google/googletest.git
-    GIT_TAG release-1.11.0
-    SOURCE_DIR ${CMAKE_CURRENT_BINARY_DIR}/External/googletest
-    UPDATE_COMMAND ""
-)
-FetchContent_MakeAvailable(googletest)
+# googletest: only used in test mode
+################################################################################
+if(BUILD_TESTING)
+    message(STATUS "Download gtest.")
+    FetchContent_Declare(googletest
+        GIT_REPOSITORY https://github.com/google/googletest.git
+        GIT_TAG release-1.11.0
+        SOURCE_DIR ${CMAKE_CURRENT_BINARY_DIR}/External/googletest
+        UPDATE_COMMAND ""
+    )
+    FetchContent_MakeAvailable(googletest)
+endif()
 
 # Json
 ################################################################################
-
-FetchContent_Declare(json
-    GIT_REPOSITORY https://github.com/ArthurSonzogni/nlohmann_json_cmake_fetchcontent
-    SOURCE_DIR ${CMAKE_CURRENT_BINARY_DIR}/External/json
-    GIT_TAG v3.9.1)
-
-FetchContent_GetProperties(json)
-FetchContent_Populate(json)
-add_subdirectory(${json_SOURCE_DIR} ${json_BINARY_DIR})
-include_directories(${json_SOURCE_DIR})
+if(EXISTS $ENV{PREFIX}/include/nlohmann)
+    find_package(nlohmann_json)
+else()
+    message(STATUS "Download nlohmann_json.")
+    FetchContent_Declare(json
+        GIT_REPOSITORY https://github.com/ArthurSonzogni/nlohmann_json_cmake_fetchcontent
+        SOURCE_DIR ${CMAKE_CURRENT_BINARY_DIR}/External/json
+        GIT_TAG v3.9.1)
+    
+    FetchContent_GetProperties(json)
+    FetchContent_Populate(json)
+    add_subdirectory(${json_SOURCE_DIR} ${json_BINARY_DIR})
+    include_directories(${json_SOURCE_DIR})
+endif()
 
 # Kokkos
 ################################################################################
@@ -67,51 +85,67 @@ include_directories(${json_SOURCE_DIR})
 
 # Eigen3
 ################################################################################
-
-ExternalProject_Add(
-    eigen_project
-    SOURCE_DIR "${CMAKE_BINARY_DIR}/External/Eigen3"
-    URL "https://github.com/eigenteam/eigen-git-mirror/archive/3.3.7.tar.gz"
-    URL_HASH MD5=77a2c934eaf35943c43ee600a83b72df
-    CONFIGURE_COMMAND ""
-    BUILD_COMMAND ""
-    INSTALL_COMMAND ""
-)
-ExternalProject_Get_Property(eigen_project SOURCE_DIR)
-add_library(Eigen3 INTERFACE)
-target_include_directories(Eigen3 SYSTEM INTERFACE ${SOURCE_DIR})
-include_directories(${SOURCE_DIR})
+set(EXIST_EIGEN OFF)
+if(EXISTS $ENV{PREFIX}/include/eigen3)
+    find_package(Eigen3 3.3)
+    message(STATUS "Found Eigen3.")
+    set(EXIST_EIGEN ON)
+    add_library(Eigen3 INTERFACE)
+else()
+    message(STATUS "Download eigen")
+    ExternalProject_Add(
+        eigen_project
+        SOURCE_DIR "${CMAKE_BINARY_DIR}/External/Eigen3"
+        URL "https://github.com/eigenteam/eigen-git-mirror/archive/3.3.7.tar.gz"
+        URL_HASH MD5=77a2c934eaf35943c43ee600a83b72df
+        CONFIGURE_COMMAND ""
+        BUILD_COMMAND ""
+        INSTALL_COMMAND ""
+    )
+    ExternalProject_Get_Property(eigen_project SOURCE_DIR)
+    add_library(Eigen3 INTERFACE)
+    target_include_directories(Eigen3 SYSTEM INTERFACE ${SOURCE_DIR})
+    include_directories(${SOURCE_DIR})
+endif()
 
 # pybind11
 ###############################################################################
-ExternalProject_Add(
-    pybind11_project
-    SOURCE_DIR "${CMAKE_BINARY_DIR}/External/pybind11"
-    URL "https://github.com/pybind/pybind11/archive/v2.3.0.tar.gz"
-    URL_HASH MD5=e2120c5b0e3c20a93f2dfcdc55026ba8
-    CONFIGURE_COMMAND ""
-    BUILD_COMMAND ""
-    INSTALL_COMMAND ""
-)
 if (NOT FLARE_PYTHON_VERSION)
-    set(Python_ADDITIONAL_VERSIONS 3.7 3.6 3.5)
+    set(Python_ADDITIONAL_VERSIONS 3.8 3.7 3.6 3.5)
 endif()
 find_package(PythonLibsNew ${FLARE_PYTHON_VERSION} REQUIRED)
 
-add_library(pybind11 INTERFACE)
-ExternalProject_Get_Property(pybind11_project SOURCE_DIR)
-target_include_directories(pybind11 SYSTEM INTERFACE ${SOURCE_DIR}/include)
-target_include_directories(pybind11 SYSTEM INTERFACE ${PYTHON_INCLUDE_DIRS})
-
-if(APPLE)
-      TARGET_LINK_LIBRARIES(pybind11 INTERFACE "-undefined dynamic_lookup")
-      message(STATUS "Building in conda environment on MAC")
+set(EXIST_PYBIND OFF)
+if(EXISTS $ENV{PREFIX}/include/pybind11)
+    find_package(pybind11 CONFIG)
+    set(EXIST_PYBIND ON)
 else()
-      target_link_libraries(pybind11 INTERFACE ${PYTHON_LIBRARIES})
+    message(STATUS "Download pybind11.")
+    ExternalProject_Add(
+        pybind11_project
+        SOURCE_DIR "${CMAKE_BINARY_DIR}/External/pybind11"
+        URL "https://github.com/pybind/pybind11/archive/v2.3.0.tar.gz"
+        URL_HASH MD5=e2120c5b0e3c20a93f2dfcdc55026ba8
+        CONFIGURE_COMMAND ""
+        BUILD_COMMAND ""
+        INSTALL_COMMAND ""
+    )
+    add_library(pybind11 INTERFACE)
+    ExternalProject_Get_Property(pybind11_project SOURCE_DIR)
+    target_include_directories(pybind11 SYSTEM INTERFACE ${SOURCE_DIR}/include)
+    target_include_directories(pybind11 SYSTEM INTERFACE ${PYTHON_INCLUDE_DIRS})
+    
+    if(APPLE)
+        TARGET_LINK_LIBRARIES(pybind11 INTERFACE "-undefined dynamic_lookup")
+        message(STATUS "Building in conda environment on MAC")
+    else()
+        target_link_libraries(pybind11 INTERFACE ${PYTHON_LIBRARIES})
+    endif()
+
+    # Greatly reduces the code bloat
+    target_compile_options(pybind11 INTERFACE "-fvisibility=hidden")
 endif()
 
-# Greatly reduces the code bloat
-target_compile_options(pybind11 INTERFACE "-fvisibility=hidden")
 ###############################################################################
 
 # Specify source files.
@@ -152,7 +186,13 @@ include_directories(
 # See: https://github.com/pybind/cmake_example/issues/11
 add_library(flare STATIC ${FLARE_SOURCES})
 set_target_properties(flare PROPERTIES POSITION_INDEPENDENT_CODE ON)
-add_dependencies(flare eigen_project)
+
+# Link to eigen
+if (EXIST_EIGEN)
+    target_link_libraries(flare PUBLIC Eigen3::Eigen)
+else()
+    add_dependencies(flare eigen_project)
+endif()
 
 # Link to json.
 target_link_libraries(flare PUBLIC nlohmann_json::nlohmann_json)
@@ -198,11 +238,17 @@ endif()
 
 # Create pybind module.
 add_library(flare_module SHARED ${PYBIND_SOURCES})
-target_link_libraries(flare_module PUBLIC flare pybind11)
-set_target_properties(flare_module PROPERTIES PREFIX "${PYTHON_MODULE_PREFIX}"
-                                              SUFFIX "${PYTHON_MODULE_EXTENSION}")
-add_dependencies(flare_module pybind11_project)
+if(EXIST_PYBIND)
+    target_link_libraries(flare_module PUBLIC pybind11::module)
+else()
+    target_link_libraries(flare_module PUBLIC flare pybind11)
+    set_target_properties(flare_module PROPERTIES PREFIX "${PYTHON_MODULE_PREFIX}"
+                                                  SUFFIX "${PYTHON_MODULE_EXTENSION}")
+    add_dependencies(flare_module pybind11_project)
+endif()
 set_target_properties(flare_module PROPERTIES OUTPUT_NAME "_C_flare")
 
 # Add test directory.
-add_subdirectory(ctests)
+if(BUILD_TESTING)
+    add_subdirectory(ctests)
+endif()
